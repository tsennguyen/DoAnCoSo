@model LoginViewModel // Ensure you have a using statement for your ViewModel's namespace if needed
@{
    Layout = null; // No layout page
    ViewData["Title"] = "Sign In";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        /* Basic Reset & Font */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(90deg, #87CEFA 0%, #DDA0DD 100%);
            background-size: cover;
            background-position: center center;
            background-repeat: no-repeat;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }

        .login-container {
            background-color: #ffffff;
            padding: 40px 30px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            max-width: 400px;
            width: 100%;
            text-align: center;
        }

            .login-container h2 {
                color: #4a148c;
                margin-bottom: 20px; /* Reduced margin slightly */
                font-size: 2em;
                font-weight: 600;
            }

        .form-group {
            margin-bottom: 15px; /* Adjusted margin */
            text-align: left; /* Align label/input/validation */
        }

        .form-control {
            width: 100%;
            padding: 15px 20px;
            border: 1px solid #eee;
            border-radius: 30px;
            font-size: 0.95em;
            background-color: #f8f9fa;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

            .form-control::placeholder {
                color: #aaa;
            }

            .form-control:focus {
                outline: none;
                border-color: #c3a0e3;
                box-shadow: 0 0 8px rgba(195, 160, 227, 0.4);
            }

        .password-wrapper {
            position: relative;
            display: flex;
            align-items: center;
        }

            .password-wrapper .form-control {
                padding-right: 45px;
            }

        .password-toggle-icon {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #aaa;
            font-size: 1.2em;
        }

        .btn-sign-in {
            background: linear-gradient(90deg, #d080ff 0%, #a040ff 100%);
            color: white;
            border: none;
            padding: 15px;
            border-radius: 30px;
            width: 100%;
            font-size: 1em;
            font-weight: bold;
            text-transform: uppercase;
            cursor: pointer;
            transition: opacity 0.3s ease;
            margin-top: 15px; /* Adjusted margin */
            margin-bottom: 25px; /* Adjusted margin */
        }

            .btn-sign-in:hover {
                opacity: 0.9;
            }

        .divider {
            color: #aaa;
            font-size: 0.9em;
            margin-bottom: 20px;
            text-align: center;
        }

        .social-login {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 25px; /* Adjusted margin */
        }

        .social-button {
            background-color: #fff;
            border: 1px solid #eee;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            transition: box-shadow 0.3s ease, background-color 0.3s ease;
            text-decoration: none; /* Ensure links look like buttons */
        }

            .social-button:hover {
                box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
                background-color: #f8f8f8;
            }

            .social-button i {
                font-size: 1.6em;
            }

        .google i {
            color: #DB4437;
        }

        .form-links { /* Container for Sign Up and Forgot Password */
            margin-top: 20px;
            font-size: 0.95em;
            line-height: 1.6; /* Add space between lines */
        }

            .form-links a {
                color: #6a1b9a;
                text-decoration: none;
                font-weight: 500;
                display: block; /* Make links appear on separate lines easily */
                margin-bottom: 5px; /* Space between links */
            }

                .form-links a:hover {
                    text-decoration: underline;
                }

        /* Style for validation messages */
        .text-danger {
            color: #dc3545; /* Standard Bootstrap danger color */
            font-size: 0.85em;
            padding-left: 15px; /* Indent slightly */
            display: block; /* Ensure it takes its own line */
            margin-top: 5px;
        }

        /* Style for validation summary */
        .validation-summary-errors ul {
            list-style: none;
            padding: 0;
            margin: 0 0 15px 0; /* Space below summary */
        }

        .validation-summary-errors li {
            color: #dc3545;
            font-size: 0.9em;
            text-align: center;
        }

    </style>
</head>
<body>

    <div class="login-container">
        <h2>Sign In</h2>

        @* Use asp-action and asp-controller on the form tag for clarity *@
        <form asp-action="Login" asp-controller="Account" method="post">
            @* Display model-level errors (e.g., invalid login attempt) *@
            <div asp-validation-summary="ModelOnly" class="text-danger validation-summary-errors"></div>

            <div class="form-group">
                @* Use asp-for to link to the ViewModel property *@
                <input asp-for="UserName" class="form-control" placeholder="username or email" />
                @* Use asp-validation-for to display property-specific errors *@
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <div class="password-wrapper">
                    @* Use asp-for for password. type="password" is automatically handled *@
                    <input asp-for="Password" class="form-control" placeholder="password" />
                    @* Note: The default asp-for id will be "Password". Adjust JS if needed, or keep current id *@
                    <i class="bi bi-eye-slash password-toggle-icon" id="togglePassword"></i>
                </div>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <button type="submit" class="btn-sign-in">Sign In</button>

            <p class="divider">Or login with</p>

            <div class="social-login">
                <!-- Google Login Button -->
                @* Use asp-action and asp-controller for the link generation *@
                <a asp-action="LoginByGoogle" asp-controller="Account" class="social-button google" title="Login with Google">
                    <i class="bi bi-google"></i>
                </a>
            </div>

            <div class="form-links">
                @* Link to Registration/Create action *@
                <a asp-action="Create" asp-controller="Account">Don't have an account? Sign Up</a>
                @* Link to Forgot Password action *@
                <a asp-action="ForgotPass" asp-controller="Account">Forgot Password?</a>
            </div>

        </form>
    </div>

    <script>
        // JavaScript for Password Toggle Visibility
        const togglePassword = document.getElementById('togglePassword');
        // IMPORTANT: Use the ID generated by asp-for, which is typically the property name.
        // If you manually set id="password", keep using 'password'.
        // Otherwise, use 'Password' (matching asp-for="Password").
        const passwordInput = document.getElementById('Password'); // Corrected ID based on asp-for="Password"

        if (togglePassword && passwordInput) {
            togglePassword.addEventListener('click', function (e) {
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);
                this.classList.toggle('bi-eye');
                this.classList.toggle('bi-eye-slash');
            });
        }
    </script>

    @* Section to render validation scripts - IMPORTANT for client-side validation *@
    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }

</body>
</html>